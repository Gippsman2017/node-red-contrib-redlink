v 1.5.5 fix timing issue when populating consumers from producer- clear existing options in consumer select just before
        populating with available consumers; fix large message support- increase bodyParser limit, clean up large message
        directory after read
v 1.5.4 simplify all-store-names route; remove unused code in redlink.html and redlink.js;
        fix store select ui validation- populate default in ui rather than in backend route,
        tweaks to validate- see https://discourse.nodered.org/t/problem-with-validation-in-ui/17307/7 for more info
v 1.5.3 add renotify interval for consumer; fix error message for messages which may have already been read; fix ett,
        notifyInterval validation for producer
v 1.5.2 Error messages fixed in store
v 1.5.1 Completed the html changes for producer, consumer and store 
v 1.5.0 Feature added "Interstore Load Balancing", when set in the store, multiple service registrations of the same name
        will cause the store to send single producer message notifications using randomly load balance to North / South destination consumer stores.
        This will provide a more equitable consumption of producer messages and a reduction of notifications will be noticed.
        Minor fixes for TLS errors under high message load.
        More documentation.
v 1.4.2 Small fix for msg.enforceReturnPath logic overrides config logic
        Now traps bad listener startup and displays it node.status
        More documentation
        Removed leftover console.log from producer
v 1.4.1 Added html and flag to Producer, user can also use msg.enforceReturnPath to overide the config checkbox 
v 1.4.0 Feature added, will be completed in v 1.4.1, return paths for read and reply are now set by the producer.
        This means that the producer and tell the consumer to transact via the stores that supplied the notify
        instead of attemping to directly read and reply to the producer store.
        This feature is what you need to use as a proxy gateway to the internet etc. 
V 1.3.2 Fixed an issue with sendonly causing issues in the consumer with or without sendonly (#8 giminni)
V 1.3.1 Added Producer ETT error data to the failure port on Producer.
        Fixed the ETT timer, it was incrementing by 2, strange bug.
        Fixed the HTML consumer / producer deploy, seem to have broken it in 1.3.0!
        The path that the notifiy has traversed has been added to all Producer notify messages.
        node.status data has been sped up to show mesh resync on deploys.
v 1.3.0 Changed the algorythm for Producer and Consumer notifies, they now have internal timers as well.
        Added more info to node.status.
v 1.2.2 Cleaned up local and remote producer notifies
v 1.2.1 Added more info to node.status
v 1.2.0 Fixed the store / consumer / producer connections and added node.status info.
v 1.1.9 Bump Git update
v 1.1.8 redlinkConsumer mod for Deploy "Modified Nodes" didnt delete Consumer record first, could add to another store causing duplicates
v 1.1.7 UI tweaks in configuration html; font awesome icons
v 1.1.6 Add support for user to provide their own certificate for each store- defaults to self signed
        Show status on store node- if unable tos tart server on the listen address, the store node will have a red icon
v 1.1.5 Added a flag to stop redlinkStore globalConsumer inserts from southBound stores.
	Fixed a bug where North Stores forget to remove south peers from their stores when the south peer is no longer connected
	it was causing the south store being updated from the north store regardless.
v 1.1.4 Updated the Readme for more clarity indicating Redlink configurations and added an Index.
v 1.1.3 Added the capability for North stores to delete South store entries when South Stores are not
        contactable during reSync. All registration entries are also removed.
        Also deleted North Store registrations from the South stores when unable to contact North stores during reSync.   
v 1.1.2 Bug fix- msg.topic appears in producer destination drop down twice
v 1.1.1 Changed the Store Sync algorithm so that a south store with multiple north stores cannot relay
	Changed the Sync timing to ensure that entries are delete/purged correctly.
	Ensured that Node-Red Deploy's cause correct propagation of the services throughout the mesh. 
v 1.0.2 Add ETT to timeout message , notify interval to repeatedly notify consumers of messages
v 1.0.1	Changed the SSL key size to 2048 (was 1024), required by new v2 spec.
	Major change required for container issues causing wrong Consumer Updates to be blocked and not cascaded.
	So, replaced the store algorythms for store updates and interconnection resync's
	A New reSync timer has been added (currently 30s) to redlinkStore to enforce ALL north bound registrations.
	The Store and Consumer Registration flow is now:
	  1/ Inform the defined north store of this south connection
	  2/ This South Store sends its Consumer service registrations North
	  3/ The North Store then uses its own reSync timer to cascade the registrations to its north and south peers.
        redlinkConsumer has a mod for topic (read) to be consistent with redlinkProducer
v 0.3.7 Make consumer read consistent with producer- manual read now works off msg.topic='read' rather than msg.cmd
v 0.3.6 Fixed priority
v 0.3.5 More Documentation updates.
v 0.3.4 Fix rate limiter- extract rate limiter initialisation into separate module; work around for a bug in third party rate limiter
v 0.3.3 Fixed Producer, msg.topic can now be used to set target service, new store listServices call.
v 0.3.2 Send notify in store when transiting notifications, fix notify in producer
v 0.3.1 Setting file Defaults updated.
v 0.3.0 Documentation update.
v 0.2.0 Rewrite of redlinkStore to implement a protocol similar to OSPF adds hopcount and removes circular routing issues. 
v 0.1.1 Change to redlinkStore.js to cater for mesh registrations and notifies
v 0.1.0 Rewrite of producer / consumer and removed reply node.
v 0.0.5 Lots of changes to consolidate producer, consumer replies
v 0.0.4 Added mesh support for consumers, store; merge John's changes
v 0.0.3 Coding, Colours, Logging Updates
v 0.0.2 Documentation Update
v 0.0.1 Initial concept design
